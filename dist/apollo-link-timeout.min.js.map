{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./node_modules/graphql/language/printer.js","webpack:///./node_modules/fast-json-stable-stringify/index.js","webpack:///./node_modules/zen-observable/index.js","webpack:///./node_modules/zen-observable-ts/lib/index.js","webpack:///./node_modules/zen-observable-ts/lib/zenObservable.js","webpack:///./node_modules/apollo-utilities/lib/storeUtils.js","webpack:///./node_modules/apollo-link/lib/linkUtils.js","webpack:///./node_modules/apollo-link/lib/link.js","webpack:///./node_modules/apollo-utilities/lib/getFromAST.js","webpack:///./src/index.ts","webpack:///./node_modules/graphql/language/visitor.js","webpack:///./node_modules/zen-observable/lib/Observable.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","print","ast","_visitor","visit","leave","printDocASTReducer","Name","node","Variable","Document","join","definitions","OperationDefinition","op","operation","varDefs","wrap","variableDefinitions","directives","selectionSet","VariableDefinition","_ref","variable","type","defaultValue","SelectionSet","_ref2","block","selections","Field","_ref3","alias","args","arguments","Argument","_ref4","FragmentSpread","_ref5","InlineFragment","_ref6","typeCondition","FragmentDefinition","_ref7","IntValue","_ref8","FloatValue","_ref9","StringValue","_ref10","isDescription","escaped","replace","indexOf","indent","printBlockString","JSON","stringify","BooleanValue","_ref11","NullValue","EnumValue","_ref12","ListValue","_ref13","values","ObjectValue","_ref14","fields","ObjectField","_ref15","Directive","_ref16","NamedType","_ref17","ListType","_ref18","NonNullType","_ref19","SchemaDefinition","_ref20","operationTypes","OperationTypeDefinition","_ref21","ScalarTypeDefinition","addDescription","_ref22","ObjectTypeDefinition","_ref23","interfaces","FieldDefinition","_ref24","InputValueDefinition","_ref25","InterfaceTypeDefinition","_ref26","UnionTypeDefinition","_ref27","types","length","EnumTypeDefinition","_ref28","EnumValueDefinition","_ref29","InputObjectTypeDefinition","_ref30","ScalarTypeExtension","_ref31","ObjectTypeExtension","_ref32","InterfaceTypeExtension","_ref33","UnionTypeExtension","_ref34","EnumTypeExtension","_ref35","InputObjectTypeExtension","_ref36","DirectiveDefinition","_ref37","locations","cb","description","maybeArray","separator","filter","x","array","start","maybeString","end","data","opts","cmp","f","cycles","b","aobj","bobj","seen","toJSON","undefined","isFinite","out","Array","isArray","TypeError","seenIndex","push","keys","sort","splice","Observable","lib","assign","extendStatics","__extends","setPrototypeOf","__proto__","__","this","constructor","linkUtils_assign","LinkError","_super","message","link","_this","Error","isTerminating","request","createOperation","starting","context","next","printer","query","variables","operationName","getKey","passthrough","forward","of","toLink","handler","ApolloLink","empty","from","links","map","reduce","y","concat","split","test","left","right","leftLink","rightLink","first","second","firstLink","console","warn","nextLink","execute","transformedOperation","extensions","definition","kind","transformOperation","OPERATION_FIELDS","_i","_a","validateOperation","src_TimeoutLink","TimeoutLink","timeout","src_extends","controller","AbortController","fetchOptions","getContext","src_assign","signal","setContext","chainObservable","observer","timer","subscription","subscribe","result","clearTimeout","complete","setTimeout","abort","unsubscribe","error","visitor","visitorKeys","QueryDocumentKeys","stack","inArray","index","edits","parent","path","ancestors","newRoot","isLeaving","isEdited","pop","slice","clone","k","editOffset","ii","editKey","editValue","prev","isNode","visitFn","getVisitFn","BREAK","visitInParallel","visitors","skipping","enter","fn","apply","visitWithTypeInfo","typeInfo","maybeNode","Boolean","kindVisitor","kindSpecificVisitor","specificVisitor","specificKindVisitor","_createClass","defineProperties","target","props","descriptor","configurable","writable","Constructor","protoProps","staticProps","_classCallCheck","instance","hasSymbols","hasSymbol","getSymbol","getMethod","obj","getSpecies","ctor","isObservable","hostReportError","e","log","enqueue","Promise","resolve","then","cleanupSubscription","cleanup","_cleanup","closeSubscription","_observer","_queue","_state","notifySubscription","onNotify","queue","flushSubscription","observable","Subscription","subscriber","subscriptionObserver","SubscriptionObserver","_subscription","_subscriber","reject","done","_this2","_this3","_this4","C","hasSeed","hasValue","acc","_this5","_len","sources","_key","startNext","v","shift","_this6","subscriptions","outer","inner","completeIfDone","closed","forEach","method","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","item","err","return","_len2","items","_key2","symbol","configurabe"],"mappings":"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","file":"apollo-link-timeout.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.print = print;\n\nvar _visitor = require('./visitor');\n\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nfunction print(ast) {\n  return (0, _visitor.visit)(ast, { leave: printDocASTReducer });\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n\n  // Document\n\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet;\n    // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n\n\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue;\n    return variable + ': ' + type + wrap(' = ', defaultValue);\n  },\n\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    return join([wrap('', alias, ': ') + name + wrap('(', join(args, ', '), ')'), join(directives, ' '), selectionSet], ' ');\n  },\n\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n\n  // Fragments\n\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (\n      // Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      'fragment ' + name + wrap('(', join(variableDefinitions, ', '), ')') + ' ' + ('on ' + typeCondition + ' ' + wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n\n  // Value\n\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? printBlockString(value, key === 'description') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return value ? 'true' : 'false';\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n\n  // Directive\n\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n\n  // Type\n\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n\n  // Type System Definitions\n\n  SchemaDefinition: function SchemaDefinition(_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n\n  ScalarTypeDefinition: addDescription(function (_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  }),\n\n  ObjectTypeDefinition: addDescription(function (_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n\n  FieldDefinition: addDescription(function (_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + wrap('(', join(args, ', '), ')') + ': ' + type + wrap(' ', join(directives, ' '));\n  }),\n\n  InputValueDefinition: addDescription(function (_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  }),\n\n  InterfaceTypeDefinition: addDescription(function (_ref26) {\n    var name = _ref26.name,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, join(directives, ' '), block(fields)], ' ');\n  }),\n\n  UnionTypeDefinition: addDescription(function (_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  }),\n\n  EnumTypeDefinition: addDescription(function (_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  }),\n\n  EnumValueDefinition: addDescription(function (_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  }),\n\n  InputObjectTypeDefinition: addDescription(function (_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  }),\n\n  ScalarTypeExtension: function ScalarTypeExtension(_ref31) {\n    var name = _ref31.name,\n        directives = _ref31.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n\n  ObjectTypeExtension: function ObjectTypeExtension(_ref32) {\n    var name = _ref32.name,\n        interfaces = _ref32.interfaces,\n        directives = _ref32.directives,\n        fields = _ref32.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives,\n        fields = _ref33.fields;\n    return join(['extend interface', name, join(directives, ' '), block(fields)], ' ');\n  },\n\n  UnionTypeExtension: function UnionTypeExtension(_ref34) {\n    var name = _ref34.name,\n        directives = _ref34.directives,\n        types = _ref34.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n\n  EnumTypeExtension: function EnumTypeExtension(_ref35) {\n    var name = _ref35.name,\n        directives = _ref35.directives,\n        values = _ref35.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        fields = _ref36.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  },\n\n  DirectiveDefinition: addDescription(function (_ref37) {\n    var name = _ref37.name,\n        args = _ref37.arguments,\n        locations = _ref37.locations;\n    return 'directive @' + name + wrap('(', join(args, ', '), ')') + ' on ' + join(locations, ' | ');\n  })\n};\n\nfunction addDescription(cb) {\n  return function (node) {\n    return join([node.description, cb(node)], '\\n');\n  };\n}\n\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\nfunction join(maybeArray, separator) {\n  return maybeArray ? maybeArray.filter(function (x) {\n    return x;\n  }).join(separator || '') : '';\n}\n\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\nfunction block(array) {\n  return array && array.length !== 0 ? '{\\n' + indent(join(array, '\\n')) + '\\n}' : '';\n}\n\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\nfunction wrap(start, maybeString, end) {\n  return maybeString ? start + maybeString + (end || '') : '';\n}\n\nfunction indent(maybeString) {\n  return maybeString && '  ' + maybeString.replace(/\\n/g, '\\n  ');\n}\n\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n */\nfunction printBlockString(value, isDescription) {\n  var escaped = value.replace(/\"\"\"/g, '\\\\\"\"\"');\n  return (value[0] === ' ' || value[0] === '\\t') && value.indexOf('\\n') === -1 ? '\"\"\"' + escaped.replace(/\"$/, '\"\\n') + '\"\"\"' : '\"\"\"\\n' + (isDescription ? escaped : indent(escaped)) + '\\n\"\"\"';\n}","'use strict';\n\nmodule.exports = function (data, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (node) {\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        if (node === undefined) return;\n        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';\n        if (typeof node !== 'object') return JSON.stringify(node);\n\n        var i, out;\n        if (Array.isArray(node)) {\n            out = '[';\n            for (i = 0; i < node.length; i++) {\n                if (i) out += ',';\n                out += stringify(node[i]) || 'null';\n            }\n            return out + ']';\n        }\n\n        if (node === null) return 'null';\n\n        if (seen.indexOf(node) !== -1) {\n            if (cycles) return JSON.stringify('__cycle__');\n            throw new TypeError('Converting circular structure to JSON');\n        }\n\n        var seenIndex = seen.push(node) - 1;\n        var keys = Object.keys(node).sort(cmp && cmp(node));\n        out = '';\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var value = stringify(node[key]);\n\n            if (!value) continue;\n            if (out) out += ',';\n            out += JSON.stringify(key) + ':' + value;\n        }\n        seen.splice(seenIndex, 1);\n        return '{' + out + '}';\n    })(data);\n};\n","module.exports = require('./lib/Observable.js').Observable;\n","import { Observable } from './zenObservable';\nexport * from './zenObservable';\nexport default Observable;\n//# sourceMappingURL=index.js.map","import zenObservable from 'zen-observable';\nexport var Observable = zenObservable;\n//# sourceMappingURL=zenObservable.js.map","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport stringify from 'fast-json-stable-stringify';\nexport function isScalarValue(value) {\n    return ['StringValue', 'BooleanValue', 'EnumValue'].indexOf(value.kind) > -1;\n}\nexport function isNumberValue(value) {\n    return ['IntValue', 'FloatValue'].indexOf(value.kind) > -1;\n}\nfunction isStringValue(value) {\n    return value.kind === 'StringValue';\n}\nfunction isBooleanValue(value) {\n    return value.kind === 'BooleanValue';\n}\nfunction isIntValue(value) {\n    return value.kind === 'IntValue';\n}\nfunction isFloatValue(value) {\n    return value.kind === 'FloatValue';\n}\nfunction isVariable(value) {\n    return value.kind === 'Variable';\n}\nfunction isObjectValue(value) {\n    return value.kind === 'ObjectValue';\n}\nfunction isListValue(value) {\n    return value.kind === 'ListValue';\n}\nfunction isEnumValue(value) {\n    return value.kind === 'EnumValue';\n}\nfunction isNullValue(value) {\n    return value.kind === 'NullValue';\n}\nexport function valueToObjectRepresentation(argObj, name, value, variables) {\n    if (isIntValue(value) || isFloatValue(value)) {\n        argObj[name.value] = Number(value.value);\n    }\n    else if (isBooleanValue(value) || isStringValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isObjectValue(value)) {\n        var nestedArgObj_1 = {};\n        value.fields.map(function (obj) {\n            return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n        });\n        argObj[name.value] = nestedArgObj_1;\n    }\n    else if (isVariable(value)) {\n        var variableValue = (variables || {})[value.name.value];\n        argObj[name.value] = variableValue;\n    }\n    else if (isListValue(value)) {\n        argObj[name.value] = value.values.map(function (listValue) {\n            var nestedArgArrayObj = {};\n            valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n            return nestedArgArrayObj[name.value];\n        });\n    }\n    else if (isEnumValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isNullValue(value)) {\n        argObj[name.value] = null;\n    }\n    else {\n        throw new Error(\"The inline argument \\\"\" + name.value + \"\\\" of kind \\\"\" + value.kind + \"\\\" is not supported.\\n                    Use variables instead of inline arguments to overcome this limitation.\");\n    }\n}\nexport function storeKeyNameFromField(field, variables) {\n    var directivesObj = null;\n    if (field.directives) {\n        directivesObj = {};\n        field.directives.forEach(function (directive) {\n            directivesObj[directive.name.value] = {};\n            if (directive.arguments) {\n                directive.arguments.forEach(function (_a) {\n                    var name = _a.name, value = _a.value;\n                    return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n                });\n            }\n        });\n    }\n    var argObj = null;\n    if (field.arguments && field.arguments.length) {\n        argObj = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj, name, value, variables);\n        });\n    }\n    return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\nvar KNOWN_DIRECTIVES = [\n    'connection',\n    'include',\n    'skip',\n    'client',\n    'rest',\n    'export',\n];\nexport function getStoreKeyName(fieldName, args, directives) {\n    if (directives &&\n        directives['connection'] &&\n        directives['connection']['key']) {\n        if (directives['connection']['filter'] &&\n            directives['connection']['filter'].length > 0) {\n            var filterKeys = directives['connection']['filter']\n                ? directives['connection']['filter']\n                : [];\n            filterKeys.sort();\n            var queryArgs_1 = args;\n            var filteredArgs_1 = {};\n            filterKeys.forEach(function (key) {\n                filteredArgs_1[key] = queryArgs_1[key];\n            });\n            return directives['connection']['key'] + \"(\" + JSON.stringify(filteredArgs_1) + \")\";\n        }\n        else {\n            return directives['connection']['key'];\n        }\n    }\n    var completeFieldName = fieldName;\n    if (args) {\n        // We can't use `JSON.stringify` here since it's non-deterministic,\n        // and can lead to different store key names being created even though\n        // the `args` object used during creation has the same properties/values.\n        var stringifiedArgs = stringify(args);\n        completeFieldName += \"(\" + stringifiedArgs + \")\";\n    }\n    if (directives) {\n        Object.keys(directives).forEach(function (key) {\n            if (KNOWN_DIRECTIVES.indexOf(key) !== -1)\n                return;\n            if (directives[key] && Object.keys(directives[key]).length) {\n                completeFieldName += \"@\" + key + \"(\" + JSON.stringify(directives[key]) + \")\";\n            }\n            else {\n                completeFieldName += \"@\" + key;\n            }\n        });\n    }\n    return completeFieldName;\n}\nexport function argumentsObjectFromField(field, variables) {\n    if (field.arguments && field.arguments.length) {\n        var argObj_1 = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj_1, name, value, variables);\n        });\n        return argObj_1;\n    }\n    return null;\n}\nexport function resultKeyNameFromField(field) {\n    return field.alias ? field.alias.value : field.name.value;\n}\nexport function isField(selection) {\n    return selection.kind === 'Field';\n}\nexport function isInlineFragment(selection) {\n    return selection.kind === 'InlineFragment';\n}\nexport function isIdValue(idObject) {\n    return idObject && idObject.type === 'id';\n}\nexport function toIdValue(idConfig, generated) {\n    if (generated === void 0) { generated = false; }\n    return __assign({ type: 'id', generated: generated }, (typeof idConfig === 'string'\n        ? { id: idConfig, typename: undefined }\n        : idConfig));\n}\nexport function isJsonValue(jsonObject) {\n    return (jsonObject != null &&\n        typeof jsonObject === 'object' &&\n        jsonObject.type === 'json');\n}\nfunction defaultValueFromVariable(node) {\n    throw new Error(\"Variable nodes are not supported by valueFromNode\");\n}\n/**\n * Evaluate a ValueNode and yield its value in its natural JS form.\n */\nexport function valueFromNode(node, onVariable) {\n    if (onVariable === void 0) { onVariable = defaultValueFromVariable; }\n    switch (node.kind) {\n        case 'Variable':\n            return onVariable(node);\n        case 'NullValue':\n            return null;\n        case 'IntValue':\n            return parseInt(node.value, 10);\n        case 'FloatValue':\n            return parseFloat(node.value);\n        case 'ListValue':\n            return node.values.map(function (v) { return valueFromNode(v, onVariable); });\n        case 'ObjectValue': {\n            var value = {};\n            for (var _i = 0, _a = node.fields; _i < _a.length; _i++) {\n                var field = _a[_i];\n                value[field.name.value] = valueFromNode(field.value, onVariable);\n            }\n            return value;\n        }\n        default:\n            return node.value;\n    }\n}\n//# sourceMappingURL=storeUtils.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { getOperationName } from 'apollo-utilities';\nimport Observable from 'zen-observable-ts';\nimport { print } from 'graphql/language/printer';\nexport function validateOperation(operation) {\n    var OPERATION_FIELDS = [\n        'query',\n        'operationName',\n        'variables',\n        'extensions',\n        'context',\n    ];\n    for (var _i = 0, _a = Object.keys(operation); _i < _a.length; _i++) {\n        var key = _a[_i];\n        if (OPERATION_FIELDS.indexOf(key) < 0) {\n            throw new Error(\"illegal argument: \" + key);\n        }\n    }\n    return operation;\n}\nvar LinkError = /** @class */ (function (_super) {\n    __extends(LinkError, _super);\n    function LinkError(message, link) {\n        var _this = _super.call(this, message) || this;\n        _this.link = link;\n        return _this;\n    }\n    return LinkError;\n}(Error));\nexport { LinkError };\nexport function isTerminating(link) {\n    return link.request.length <= 1;\n}\nexport function toPromise(observable) {\n    var completed = false;\n    return new Promise(function (resolve, reject) {\n        observable.subscribe({\n            next: function (data) {\n                if (completed) {\n                    console.warn(\"Promise Wrapper does not support multiple results from Observable\");\n                }\n                else {\n                    completed = true;\n                    resolve(data);\n                }\n            },\n            error: reject,\n        });\n    });\n}\n// backwards compat\nexport var makePromise = toPromise;\nexport function fromPromise(promise) {\n    return new Observable(function (observer) {\n        promise\n            .then(function (value) {\n            observer.next(value);\n            observer.complete();\n        })\n            .catch(observer.error.bind(observer));\n    });\n}\nexport function fromError(errorValue) {\n    return new Observable(function (observer) {\n        observer.error(errorValue);\n    });\n}\nexport function transformOperation(operation) {\n    var transformedOperation = {\n        variables: operation.variables || {},\n        extensions: operation.extensions || {},\n        operationName: operation.operationName,\n        query: operation.query,\n    };\n    // best guess at an operation name\n    if (!transformedOperation.operationName) {\n        transformedOperation.operationName =\n            typeof transformedOperation.query !== 'string'\n                ? getOperationName(transformedOperation.query)\n                : '';\n    }\n    return transformedOperation;\n}\nexport function createOperation(starting, operation) {\n    var context = __assign({}, starting);\n    var setContext = function (next) {\n        if (typeof next === 'function') {\n            context = __assign({}, context, next(context));\n        }\n        else {\n            context = __assign({}, context, next);\n        }\n    };\n    var getContext = function () { return (__assign({}, context)); };\n    Object.defineProperty(operation, 'setContext', {\n        enumerable: false,\n        value: setContext,\n    });\n    Object.defineProperty(operation, 'getContext', {\n        enumerable: false,\n        value: getContext,\n    });\n    Object.defineProperty(operation, 'toKey', {\n        enumerable: false,\n        value: function () { return getKey(operation); },\n    });\n    return operation;\n}\nexport function getKey(operation) {\n    // XXX we're assuming here that variables will be serialized in the same order.\n    // that might not always be true\n    return print(operation.query) + \"|\" + JSON.stringify(operation.variables) + \"|\" + operation.operationName;\n}\n//# sourceMappingURL=linkUtils.js.map","import Observable from 'zen-observable-ts';\nimport { validateOperation, isTerminating, LinkError, transformOperation, createOperation, } from './linkUtils';\nvar passthrough = function (op, forward) { return (forward ? forward(op) : Observable.of()); };\nvar toLink = function (handler) {\n    return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n};\nexport var empty = function () {\n    return new ApolloLink(function (op, forward) { return Observable.of(); });\n};\nexport var from = function (links) {\n    if (links.length === 0)\n        return empty();\n    return links.map(toLink).reduce(function (x, y) { return x.concat(y); });\n};\nexport var split = function (test, left, right) {\n    if (right === void 0) { right = new ApolloLink(passthrough); }\n    var leftLink = toLink(left);\n    var rightLink = toLink(right);\n    if (isTerminating(leftLink) && isTerminating(rightLink)) {\n        return new ApolloLink(function (operation) {\n            return test(operation)\n                ? leftLink.request(operation) || Observable.of()\n                : rightLink.request(operation) || Observable.of();\n        });\n    }\n    else {\n        return new ApolloLink(function (operation, forward) {\n            return test(operation)\n                ? leftLink.request(operation, forward) || Observable.of()\n                : rightLink.request(operation, forward) || Observable.of();\n        });\n    }\n};\n// join two Links together\nexport var concat = function (first, second) {\n    var firstLink = toLink(first);\n    if (isTerminating(firstLink)) {\n        console.warn(new LinkError(\"You are calling concat on a terminating link, which will have no effect\", firstLink));\n        return firstLink;\n    }\n    var nextLink = toLink(second);\n    if (isTerminating(nextLink)) {\n        return new ApolloLink(function (operation) {\n            return firstLink.request(operation, function (op) { return nextLink.request(op) || Observable.of(); }) || Observable.of();\n        });\n    }\n    else {\n        return new ApolloLink(function (operation, forward) {\n            return (firstLink.request(operation, function (op) {\n                return nextLink.request(op, forward) || Observable.of();\n            }) || Observable.of());\n        });\n    }\n};\nvar ApolloLink = /** @class */ (function () {\n    function ApolloLink(request) {\n        if (request)\n            this.request = request;\n    }\n    ApolloLink.prototype.split = function (test, left, right) {\n        if (right === void 0) { right = new ApolloLink(passthrough); }\n        return this.concat(split(test, left, right));\n    };\n    ApolloLink.prototype.concat = function (next) {\n        return concat(this, next);\n    };\n    ApolloLink.prototype.request = function (operation, forward) {\n        throw new Error('request is not implemented');\n    };\n    ApolloLink.empty = empty;\n    ApolloLink.from = from;\n    ApolloLink.split = split;\n    ApolloLink.execute = execute;\n    return ApolloLink;\n}());\nexport { ApolloLink };\nexport function execute(link, operation) {\n    return (link.request(createOperation(operation.context, transformOperation(validateOperation(operation)))) || Observable.of());\n}\n//# sourceMappingURL=link.js.map","import { assign } from './util/assign';\nimport { valueToObjectRepresentation } from './storeUtils';\nexport function getMutationDefinition(doc) {\n    checkDocument(doc);\n    var mutationDef = doc.definitions.filter(function (definition) {\n        return definition.kind === 'OperationDefinition' &&\n            definition.operation === 'mutation';\n    })[0];\n    if (!mutationDef) {\n        throw new Error('Must contain a mutation definition.');\n    }\n    return mutationDef;\n}\n// Checks the document for errors and throws an exception if there is an error.\nexport function checkDocument(doc) {\n    if (doc.kind !== 'Document') {\n        throw new Error(\"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n    }\n    var operations = doc.definitions\n        .filter(function (d) { return d.kind !== 'FragmentDefinition'; })\n        .map(function (definition) {\n        if (definition.kind !== 'OperationDefinition') {\n            throw new Error(\"Schema type definitions not allowed in queries. Found: \\\"\" + definition.kind + \"\\\"\");\n        }\n        return definition;\n    });\n    if (operations.length > 1) {\n        throw new Error(\"Ambiguous GraphQL document: contains \" + operations.length + \" operations\");\n    }\n}\nexport function getOperationDefinition(doc) {\n    checkDocument(doc);\n    return doc.definitions.filter(function (definition) { return definition.kind === 'OperationDefinition'; })[0];\n}\nexport function getOperationDefinitionOrDie(document) {\n    var def = getOperationDefinition(document);\n    if (!def) {\n        throw new Error(\"GraphQL document is missing an operation\");\n    }\n    return def;\n}\nexport function getOperationName(doc) {\n    return (doc.definitions\n        .filter(function (definition) {\n        return definition.kind === 'OperationDefinition' && definition.name;\n    })\n        .map(function (x) { return x.name.value; })[0] || null);\n}\n// Returns the FragmentDefinitions from a particular document as an array\nexport function getFragmentDefinitions(doc) {\n    return doc.definitions.filter(function (definition) { return definition.kind === 'FragmentDefinition'; });\n}\nexport function getQueryDefinition(doc) {\n    var queryDef = getOperationDefinition(doc);\n    if (!queryDef || queryDef.operation !== 'query') {\n        throw new Error('Must contain a query definition.');\n    }\n    return queryDef;\n}\nexport function getFragmentDefinition(doc) {\n    if (doc.kind !== 'Document') {\n        throw new Error(\"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n    }\n    if (doc.definitions.length > 1) {\n        throw new Error('Fragment must have exactly one definition.');\n    }\n    var fragmentDef = doc.definitions[0];\n    if (fragmentDef.kind !== 'FragmentDefinition') {\n        throw new Error('Must be a fragment definition.');\n    }\n    return fragmentDef;\n}\n/**\n * Returns the first operation definition found in this document.\n * If no operation definition is found, the first fragment definition will be returned.\n * If no definitions are found, an error will be thrown.\n */\nexport function getMainDefinition(queryDoc) {\n    checkDocument(queryDoc);\n    var fragmentDefinition;\n    for (var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++) {\n        var definition = _a[_i];\n        if (definition.kind === 'OperationDefinition') {\n            var operation = definition.operation;\n            if (operation === 'query' ||\n                operation === 'mutation' ||\n                operation === 'subscription') {\n                return definition;\n            }\n        }\n        if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\n            // we do this because we want to allow multiple fragment definitions\n            // to precede an operation definition.\n            fragmentDefinition = definition;\n        }\n    }\n    if (fragmentDefinition) {\n        return fragmentDefinition;\n    }\n    throw new Error('Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.');\n}\n// Utility function that takes a list of fragment definitions and makes a hash out of them\n// that maps the name of the fragment to the fragment definition.\nexport function createFragmentMap(fragments) {\n    if (fragments === void 0) { fragments = []; }\n    var symTable = {};\n    fragments.forEach(function (fragment) {\n        symTable[fragment.name.value] = fragment;\n    });\n    return symTable;\n}\nexport function getDefaultValues(definition) {\n    if (definition &&\n        definition.variableDefinitions &&\n        definition.variableDefinitions.length) {\n        var defaultValues = definition.variableDefinitions\n            .filter(function (_a) {\n            var defaultValue = _a.defaultValue;\n            return defaultValue;\n        })\n            .map(function (_a) {\n            var variable = _a.variable, defaultValue = _a.defaultValue;\n            var defaultValueObj = {};\n            valueToObjectRepresentation(defaultValueObj, variable.name, defaultValue);\n            return defaultValueObj;\n        });\n        return assign.apply(void 0, [{}].concat(defaultValues));\n    }\n    return {};\n}\n/**\n * Returns the names of all variables declared by the operation.\n */\nexport function variablesInOperation(operation) {\n    var names = new Set();\n    if (operation.variableDefinitions) {\n        for (var _i = 0, _a = operation.variableDefinitions; _i < _a.length; _i++) {\n            var definition = _a[_i];\n            names.add(definition.variable.name.value);\n        }\n    }\n    return names;\n}\n//# sourceMappingURL=getFromAST.js.map","import { ApolloLink, Observable, Operation, NextLink } from 'apollo-link';\nconst DEFAULT_TIMEOUT: number = 15000;\n\n/**\n * Aborts the request if the timeout expires before the response is received. The fetchOptions\n * object that this link adds to the context must be included in the config object when\n * instantiating the apollo-link-http component like this:\n *\n * import { createHttpLink } from \"apollo-link-http\";\n * ...\n * const context = operation.getContext();\n * const fetchOptions = context.fetchOptions;\n * const link = createHttpLink({ uri: \"/graphql\", fetchOptions });\n */\nexport default class TimeoutLink extends ApolloLink {\n  private timeout: number;\n\n  constructor(timeout: number) {\n    super();\n    this.timeout = timeout;\n  }\n\n  public request(operation: Operation, forward: NextLink) {\n    let controller: AbortController;\n\n    // add abort controller and signal object to fetchOptions if they don't already exist\n    if (typeof AbortController !== 'undefined') {\n      const context = operation.getContext();\n      let fetchOptions = context.fetchOptions || {};\n\n      controller = fetchOptions.controller || new AbortController();\n\n      fetchOptions = { ...fetchOptions, controller, signal: controller.signal };\n      operation.setContext({ fetchOptions });\n    }\n\n    const chainObservable = forward(operation); // observable for remaining link chain\n\n    // create local observable with timeout functionality (unsubscibe from chain observable and\n    // return an error if the timeout expires before chain observable resolves)\n    const localObservable = new Observable(observer => {\n      let timer: number;\n\n      // listen to chainObservable for result and pass to localObservable if received before timeout\n      const subscription = chainObservable.subscribe(result => {\n        clearTimeout(timer);\n        observer.next(result);\n        observer.complete();\n      });\n\n      // if timeout expires before observable completes, abort call, unsubscribe, and return error\n      timer = setTimeout(() => {\n        if (controller) {\n          controller.abort(); // abort fetch operation\n        }\n\n        subscription.unsubscribe();\n        observer.error(new Error('Timeout exceeded'));\n      }, this.timeout || DEFAULT_TIMEOUT);\n\n      // this function is called when a client unsubscribes from localObservable\n      return () => {\n        clearTimeout(timer);\n        subscription.unsubscribe();\n      };\n    });\n\n    return localObservable;\n  }\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.visit = visit;\nexports.visitInParallel = visitInParallel;\nexports.visitWithTypeInfo = visitWithTypeInfo;\nexports.getVisitFn = getVisitFn;\n\n\n/**\n * A visitor is comprised of visit functions, which are called on each node\n * during the visitor's traversal.\n */\n\n\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nvar QueryDocumentKeys = exports.QueryDocumentKeys = {\n  Name: [],\n\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name',\n  // Note: fragment variable definitions are experimental and may be changed\n  // or removed in the future.\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n\n  Directive: ['name', 'arguments'],\n\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n\n  SchemaDefinition: ['directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations']\n};\n\n/**\n * A KeyMap describes each the traversable properties of each kind of node.\n */\nvar BREAK = exports.BREAK = {};\n\n/**\n * visit() will walk through an AST using a depth first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\nfunction visit(root, visitor) {\n  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;\n\n  /* eslint-disable no-undef-init */\n  var stack = undefined;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var node = undefined;\n  var key = undefined;\n  var parent = undefined;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var isEdited = isLeaving && edits.length !== 0;\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n          for (var k in node) {\n            if (node.hasOwnProperty(k)) {\n              clone[k] = node[k];\n            }\n          }\n          node = clone;\n        }\n        var editOffset = 0;\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n          if (inArray) {\n            editKey -= editOffset;\n          }\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n      if (node === null || node === undefined) {\n        continue;\n      }\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n    if (!Array.isArray(node)) {\n      if (!isNode(node)) {\n        throw new Error('Invalid AST Node: ' + JSON.stringify(node));\n      }\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n          if (!isLeaving) {\n            if (isNode(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      stack = { inArray: inArray, index: index, keys: keys, edits: edits, prev: stack };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : visitorKeys[node.kind] || [];\n      index = -1;\n      edits = [];\n      if (parent) {\n        ancestors.push(parent);\n      }\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n\nfunction isNode(maybeNode) {\n  return Boolean(maybeNode && typeof maybeNode.kind === 'string');\n}\n\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\nfunction visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (!skipping[i]) {\n          var fn = getVisitFn(visitors[i], node.kind, /* isLeaving */false);\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (!skipping[i]) {\n          var fn = getVisitFn(visitors[i], node.kind, /* isLeaving */true);\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n\n/**\n * Creates a new visitor instance which maintains a provided TypeInfo instance\n * along with visiting visitor.\n */\nfunction visitWithTypeInfo(typeInfo, visitor) {\n  return {\n    enter: function enter(node) {\n      typeInfo.enter(node);\n      var fn = getVisitFn(visitor, node.kind, /* isLeaving */false);\n      if (fn) {\n        var result = fn.apply(visitor, arguments);\n        if (result !== undefined) {\n          typeInfo.leave(node);\n          if (isNode(result)) {\n            typeInfo.enter(result);\n          }\n        }\n        return result;\n      }\n    },\n    leave: function leave(node) {\n      var fn = getVisitFn(visitor, node.kind, /* isLeaving */true);\n      var result = void 0;\n      if (fn) {\n        result = fn.apply(visitor, arguments);\n      }\n      typeInfo.leave(node);\n      return result;\n    }\n  };\n}\n\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\nfunction getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n      var specificKindVisitor = specificVisitor[kind];\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// === Symbol Support ===\n\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\n// === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n\n  if (value == null) return undefined;\n\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n  if (ctor !== undefined) {\n    ctor = ctor[getSymbol('species')];\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n  if (!queue) {\n    return;\n  }\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({ type: type, value: value });\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{ type: type, value: value }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription = function () {\n  function Subscription(observer, subscriber) {\n    _classCallCheck(this, Subscription);\n\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  _createClass(Subscription, [{\n    key: 'unsubscribe',\n    value: function unsubscribe() {\n      if (this._state !== 'closed') {\n        closeSubscription(this);\n        cleanupSubscription(this);\n      }\n    }\n  }, {\n    key: 'closed',\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver = function () {\n  function SubscriptionObserver(subscription) {\n    _classCallCheck(this, SubscriptionObserver);\n\n    this._subscription = subscription;\n  }\n\n  _createClass(SubscriptionObserver, [{\n    key: 'next',\n    value: function next(value) {\n      onNotify(this._subscription, 'next', value);\n    }\n  }, {\n    key: 'error',\n    value: function error(value) {\n      onNotify(this._subscription, 'error', value);\n    }\n  }, {\n    key: 'complete',\n    value: function complete() {\n      onNotify(this._subscription, 'complete');\n    }\n  }, {\n    key: 'closed',\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable = exports.Observable = function () {\n  function Observable(subscriber) {\n    _classCallCheck(this, Observable);\n\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n\n    this._subscriber = subscriber;\n  }\n\n  _createClass(Observable, [{\n    key: 'subscribe',\n    value: function subscribe(observer) {\n      if (typeof observer !== 'object' || observer === null) {\n        observer = {\n          next: observer,\n          error: arguments[1],\n          complete: arguments[2]\n        };\n      }\n      return new Subscription(observer, this._subscriber);\n    }\n  }, {\n    key: 'forEach',\n    value: function forEach(fn) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (typeof fn !== 'function') {\n          reject(new TypeError(fn + ' is not a function'));\n          return;\n        }\n\n        function done() {\n          subscription.unsubscribe();\n          resolve();\n        }\n\n        var subscription = _this.subscribe({\n          next: function (value) {\n            try {\n              fn(value, done);\n            } catch (e) {\n              reject(e);\n              subscription.unsubscribe();\n            }\n          },\n\n          error: reject,\n          complete: resolve\n        });\n      });\n    }\n  }, {\n    key: 'map',\n    value: function map(fn) {\n      var _this2 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        return _this2.subscribe({\n          next: function (value) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'filter',\n    value: function filter(fn) {\n      var _this3 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        return _this3.subscribe({\n          next: function (value) {\n            try {\n              if (!fn(value)) return;\n            } catch (e) {\n              return observer.error(e);\n            }\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'reduce',\n    value: function reduce(fn) {\n      var _this4 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n      var hasSeed = arguments.length > 1;\n      var hasValue = false;\n      var seed = arguments[1];\n      var acc = seed;\n\n      return new C(function (observer) {\n        return _this4.subscribe({\n          next: function (value) {\n            var first = !hasValue;\n            hasValue = true;\n\n            if (!first || hasSeed) {\n              try {\n                acc = fn(acc, value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            } else {\n              acc = value;\n            }\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n\n            observer.next(acc);\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'concat',\n    value: function concat() {\n      var _this5 = this;\n\n      for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        var subscription = void 0;\n\n        function startNext(next) {\n          subscription = next.subscribe({\n            next: function (v) {\n              observer.next(v);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              if (sources.length === 0) {\n                subscription = undefined;\n                observer.complete();\n              } else {\n                startNext(C.from(sources.shift()));\n              }\n            }\n          });\n        }\n\n        startNext(_this5);\n\n        return function () {\n          if (subscription) {\n            subscription = undefined;\n            subscription.unsubscribe();\n          }\n        };\n      });\n    }\n  }, {\n    key: 'flatMap',\n    value: function flatMap(fn) {\n      var _this6 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        var subscriptions = [];\n\n        var outer = _this6.subscribe({\n          next: function (value) {\n            if (fn) {\n              try {\n                value = fn(value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            }\n\n            var inner = C.from(value).subscribe({\n              next: function (value) {\n                observer.next(value);\n              },\n              error: function (e) {\n                observer.error(e);\n              },\n              complete: function () {\n                var i = subscriptions.indexOf(inner);\n                if (i >= 0) subscriptions.splice(i, 1);\n                completeIfDone();\n              }\n            });\n\n            subscriptions.push(inner);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            completeIfDone();\n          }\n        });\n\n        function completeIfDone() {\n          if (outer.closed && subscriptions.length === 0) observer.complete();\n        }\n\n        return function () {\n          subscriptions.forEach(function (s) {\n            return s.unsubscribe();\n          });\n          outer.unsubscribe();\n        };\n      });\n    }\n  }, {\n    key: getSymbol('observable'),\n    value: function () {\n      return this;\n    }\n  }], [{\n    key: 'from',\n    value: function from(x) {\n      var C = typeof this === 'function' ? this : Observable;\n\n      if (x == null) throw new TypeError(x + ' is not an object');\n\n      var method = getMethod(x, getSymbol('observable'));\n      if (method) {\n        var observable = method.call(x);\n\n        if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n\n        if (isObservable(observable) && observable.constructor === C) return observable;\n\n        return new C(function (observer) {\n          return observable.subscribe(observer);\n        });\n      }\n\n      if (hasSymbol('iterator')) {\n        method = getMethod(x, getSymbol('iterator'));\n        if (method) {\n          return new C(function (observer) {\n            enqueue(function () {\n              if (observer.closed) return;\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = method.call(x)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var item = _step.value;\n\n                  observer.next(item);\n                  if (observer.closed) return;\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n\n              observer.complete();\n            });\n          });\n        }\n      }\n\n      if (Array.isArray(x)) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n            for (var i = 0; i < x.length; ++i) {\n              observer.next(x[i]);\n              if (observer.closed) return;\n            }\n            observer.complete();\n          });\n        });\n      }\n\n      throw new TypeError(x + ' is not observable');\n    }\n  }, {\n    key: 'of',\n    value: function of() {\n      for (var _len2 = arguments.length, items = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        items[_key2] = arguments[_key2];\n      }\n\n      var C = typeof this === 'function' ? this : Observable;\n\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n          for (var i = 0; i < items.length; ++i) {\n            observer.next(items[i]);\n            if (observer.closed) return;\n          }\n          observer.complete();\n        });\n      });\n    }\n  }, {\n    key: getSymbol('species'),\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: getSymbol('observable'),\n      hostReportError: hostReportError\n    },\n    configurabe: true\n  });\n}"],"sourceRoot":""}